# This is the CMakeCache file.
# For build in directory: d:/webstack/dnx/corefx/src/Native
# It was generated by CMake: c:/Program Files (x86)/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Semicolon separated list of supported configuration types, only
// supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything
// else will be ignored.
CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release;MinSizeRel;RelWithDebInfo

//Flags used by the compiler during all build types.
CMAKE_CXX_FLAGS:STRING= /DWIN32 /D_WINDOWS /W3 /GR /EHsc

//Flags used by the compiler during debug builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/D_DEBUG /MDd /Zi /Ob0 /Od /RTC1

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /D NDEBUG

//Flags used by the compiler during release builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /D NDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /D NDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING= /DWIN32 /D_WINDOWS /W3

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=/D_DEBUG /MDd /Zi /Ob0 /Od /RTC1

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /D NDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /D NDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /D NDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING= /machine:X86

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/CoreFX

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/link.exe

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING= /machine:X86

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=CoreFX

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=rc

//Flags for Windows Resource Compiler.
CMAKE_RC_FLAGS:STRING=' /DWIN32 '

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING= /machine:X86

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING= /machine:X86

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Value Computed by CMake
CoreFX_BINARY_DIR:STATIC=D:/webstack/dnx/corefx/src/Native

//Value Computed by CMake
CoreFX_SOURCE_DIR:STATIC=D:/webstack/dnx/corefx/src/Native

//use heimdal implementation of GssApi
HeimdalGssApi:BOOL=OFF

//Value Computed by CMake
System.IO.Compression.Native_BINARY_DIR:STATIC=D:/webstack/dnx/corefx/src/Native/System.IO.Compression.Native

//Value Computed by CMake
System.IO.Compression.Native_SOURCE_DIR:STATIC=D:/webstack/dnx/corefx/src/Native/System.IO.Compression.Native

//Path to a file.
ZLIB_INCLUDE_DIR:PATH=ZLIB_INCLUDE_DIR-NOTFOUND

//Path to a library.
ZLIB_LIBRARY_DEBUG:FILEPATH=ZLIB_LIBRARY_DEBUG-NOTFOUND

//Path to a library.
ZLIB_LIBRARY_RELEASE:FILEPATH=ZLIB_LIBRARY_RELEASE-NOTFOUND


########################
# INTERNAL cache entries
########################

//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=d:/webstack/dnx/corefx/src/Native
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=5
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=2
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=c:/Program Files (x86)/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=c:/Program Files (x86)/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=c:/Program Files (x86)/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Visual Studio 14 2015
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=D:/webstack/dnx/corefx/src/Native
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=2
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=c:/Program Files (x86)/CMake/share/cmake-3.5
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Test HAVE_CLOCK_MONOTONIC
HAVE_CLOCK_MONOTONIC:INTERNAL=
//Result of TRY_COMPILE
HAVE_CLOCK_MONOTONIC_COMPILED:INTERNAL=FALSE
//Test HAVE_CURLM_ADDED_ALREADY
HAVE_CURLM_ADDED_ALREADY:INTERNAL=
//Test HAVE_CURLPIPE_MULTIPLEX
HAVE_CURLPIPE_MULTIPLEX:INTERNAL=
//Test HAVE_CURL_HTTP_VERSION_2_0
HAVE_CURL_HTTP_VERSION_2_0:INTERNAL=
//Test HAVE_CURL_SSLVERSION_TLSv1_012
HAVE_CURL_SSLVERSION_TLSv1_012:INTERNAL=
//Test HAVE_DIRENT_NAME_LEN
HAVE_DIRENT_NAME_LEN:INTERNAL=
//Have symbol ECHO
HAVE_ECHO:INTERNAL=
//Have function epoll_create1
HAVE_EPOLL:INTERNAL=
//Have function fcopyfile
HAVE_FCOPYFILE:INTERNAL=
//Test HAVE_FDS_BITS
HAVE_FDS_BITS:INTERNAL=
//Test HAVE_GETDOMAINNAME_SIZET
HAVE_GETDOMAINNAME_SIZET:INTERNAL=
//Test HAVE_GETHOSTBYADDR_R
HAVE_GETHOSTBYADDR_R:INTERNAL=
//Test HAVE_GETHOSTBYNAME_R
HAVE_GETHOSTBYNAME_R:INTERNAL=
//Have function getpeereid
HAVE_GETPEEREID:INTERNAL=
//Test HAVE_GNU_STRERROR_R
HAVE_GNU_STRERROR_R:INTERNAL=
//Have includes GSS/GSS.h
HAVE_GSSFW_HEADERS:INTERNAL=
//Have symbol GSS_KRB5_CRED_NO_CI_FLAGS_X
HAVE_GSS_KRB5_CRED_NO_CI_FLAGS_X:INTERNAL=
//Have symbol GSS_SPNEGO_MECHANISM
HAVE_GSS_SPNEGO_MECHANISM:INTERNAL=
//Result of TRY_COMPILE
HAVE_HAVE_IN_PKTINFO:INTERNAL=FALSE
//Result of TRY_COMPILE
HAVE_HAVE_IP_MREQN:INTERNAL=FALSE
//Result of TRY_COMPILE
HAVE_HAVE_STATFS:INTERNAL=FALSE
//Have symbol ICANON
HAVE_ICANON:INTERNAL=
//Test HAVE_IN6_U
HAVE_IN6_U:INTERNAL=
//Have function inotify_add_watch
HAVE_INOTIFY_ADD_WATCH:INTERNAL=
//Have function inotify_init
HAVE_INOTIFY_INIT:INTERNAL=
//Have function inotify_rm_watch
HAVE_INOTIFY_RM_WATCH:INTERNAL=
//CHECK_TYPE_SIZE: struct in_pktinfo unknown
HAVE_IN_PKTINFO:INTERNAL=
//Have function ioctl
HAVE_IOCTL:INTERNAL=
//CHECK_TYPE_SIZE: struct ip_mreqn unknown
HAVE_IP_MREQN:INTERNAL=
//Have function kqueue
HAVE_KQUEUE:INTERNAL=
//Have includes linux/in.h
HAVE_LINUX_IN_H:INTERNAL=
//Have includes linux/rtnetlink.h
HAVE_LINUX_RTNETLINK_H:INTERNAL=
//Have function mach_absolute_time
HAVE_MACH_ABSOLUTE_TIME:INTERNAL=
//Have function getmntinfo
HAVE_MNTINFO:INTERNAL=
//Have function pipe2
HAVE_PIPE2:INTERNAL=
//Have function posix_fadvise
HAVE_POSIX_ADVISE:INTERNAL=
//Test HAVE_PRIVATE_FDS_BITS
HAVE_PRIVATE_FDS_BITS:INTERNAL=
//Test HAVE_RT_MSGHDR
HAVE_RT_MSGHDR:INTERNAL=
//Have function sched_getaffinity
HAVE_SCHED_GETAFFINITY:INTERNAL=
//Have function sched_setaffinity
HAVE_SCHED_SETAFFINITY:INTERNAL=
//Test HAVE_SENDFILE
HAVE_SENDFILE:INTERNAL=
//Test HAVE_SHM_OPEN_THAT_WORKS_WELL_ENOUGH_WITH_MMAP
HAVE_SHM_OPEN_THAT_WORKS_WELL_ENOUGH_WITH_MMAP:INTERNAL=
//Result of TRY_COMPILE
HAVE_SHM_OPEN_THAT_WORKS_WELL_ENOUGH_WITH_MMAP_COMPILED:INTERNAL=FALSE
//Have function stat64
HAVE_STAT64:INTERNAL=
//CHECK_TYPE_SIZE: struct statfs unknown
HAVE_STATFS:INTERNAL=
//Test HAVE_STATFS_FSTYPENAME
HAVE_STATFS_FSTYPENAME:INTERNAL=
//Test HAVE_STATVFS_FSTYPENAME
HAVE_STATVFS_FSTYPENAME:INTERNAL=
//Test HAVE_STAT_BIRTHTIME
HAVE_STAT_BIRTHTIME:INTERNAL=
//Have function strcpy_s
HAVE_STRCPY_S:INTERNAL=1
//Have function strlcpy
HAVE_STRLCPY:INTERNAL=
//Have includes sys/sysctl.h
HAVE_SYS_SYSCTL_H:INTERNAL=
//Have function tcgetattr
HAVE_TCGETATTR:INTERNAL=
//Have symbol TCPS_ESTABLISHED
HAVE_TCP_FSM_H:INTERNAL=
//Test HAVE_TCP_H_TCPSTATE_ENUM
HAVE_TCP_H_TCPSTATE_ENUM:INTERNAL=
//Test HAVE_TCP_VAR_H
HAVE_TCP_VAR_H:INTERNAL=
//Have symbol TCSANOW
HAVE_TCSANOW:INTERNAL=
//Have function tcsetattr
HAVE_TCSETATTR:INTERNAL=
//Have symbol TIOCGWINSZ
HAVE_TIOCGWINSZ:INTERNAL=
//Test HAVE_U6_ADDR
HAVE_U6_ADDR:INTERNAL=
//Test KEVENT_HAS_VOID_UDATA
KEVENT_HAS_VOID_UDATA:INTERNAL=
//Have correct prototype for kevent
KEVENT_REQUIRES_INT_PARAMS:INTERNAL=0
//Have correct prototype for getpriority
PRIORITY_REQUIRES_INT_WHO:INTERNAL=0
//ADVANCED property for variable: ZLIB_INCLUDE_DIR
ZLIB_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_LIBRARY_DEBUG
ZLIB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_LIBRARY_RELEASE
ZLIB_LIBRARY_RELEASE-ADVANCED:INTERNAL=1

